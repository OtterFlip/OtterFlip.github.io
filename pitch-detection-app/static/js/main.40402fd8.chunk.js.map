{"version":3,"sources":["components/pitch/index.tsx","constants/colors.js","components/pitch/pitch-monitor.tsx","components/circle-chart/utils.tsx","components/circle-chart/circle-chat.tsx","model.ts","components/side-nav/side-nav.tsx","components/main/options.tsx","components/main/app-frame.tsx","components/main/about.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PitchComponent","displayElement","React","createRef","pitchDisplay","lastRender","continuousUpdate","onResize","resize","this","PitchDisplay","current","setBackgroundColor","startRender","updatePitch","requestAnimationFrame","window","addEventListener","removeEventListener","time","Date","getTime","props","freq","clarity","pushFrequency","frequency","render","Fragment","className","style","position","ref","Component","PitchMonitor","stream","detectorName","workerConnection","windowSize","powerThreshold","clarityThreshold","enabled","pitchRenderer","useState","setFreq","setClarity","pendingRef","useRef","pitchSetupRef","setupConnection","useCallback","remoteHandle","call","pitchSetup","buffer","Float32Array","audioContext","AudioContext","mediaStreamSource","createMediaStreamSource","analyser","createAnalyser","fftSize","connect","console","warn","getFloatTimeDomainData","sampleRate","result","useEffect","log","escape","cancelRender","renderFrame","PitchRenderer","LOG_A","Math","log2","radialBoxLayoutOffsets","angle","r","w","h","PI","pi","tan","arctan","atan","sqrt","sin","cos","outx","outy","criticalrange1","criticalrange2","a","b","B","c","NOTE_SYMBOLS_SHARP","C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","NOTE_SYMBOLS_FLAT","UpdateTargetNote","targetNotes","randomIndex","floor","random","length","g_targetNote","g_targetNoteDisplayVal","Frequency","hz","noteSymbols","noteFormat","notes","Object","keys","logNote","octave","rot","i","note","freqToNote","round","CircleChartBackground","memo","canvas","noteRefs","cX","cY","outerR","min","innerR","ctx","getContext","options","ring","Path2D","arc","moveTo","fillStyle","fill","strokeStyle","ticks","tickLen","vecX","vecY","lineTo","lineWidth","stroke","drawCircleChartBackground","div","getBoundingClientRect","divW","width","divH","height","ox","oy","left","top","map","CircleChart","setW","setH","surroundingDivRef","canvasPointerRef","computeInnerAndOuterRadius","freqToAngle","useLayoutEffect","handleResize","pointerContext","opacity","vec_x","vec_y","nvec_x","nvec_y","lineJoin","drawCircleChartArrow","transformOrigin","transform","visibility","store","createStore","displayType","loading","loaded","audioOptions","audio","echoCancellation","autoGainControl","setWindowSize","action","state","payload","setDetectorName","setDisplayType","setClarityThreshold","setEnabled","setStream","setLoading","setLoaded","setWorkerConnection","initializeStream","thunk","actions","getState","navigator","mediaDevices","getUserMedia","error","stopStream","getTracks","stop","initializeWorker","worker","Worker","process","messenger","WorkerMessenger","ParentHandshake","connection","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","SideNavContext","createContext","expanded","toggleExpanded","Toggle","useContext","type","onClick","NavItem","children","rest","_rest","NavIcon","NavText","NavExtra","SideNav","assign","_expanded","onToggle","setExpanded","Provider","value","Nav","Select","_selected","selected","_onSelect","onSelect","choices","setSelected","selectedIndex","max","findIndex","item","DropdownButton","index","title","desc","variant","as","Dropdown","Item","eventKey","SelectWindowSize","SelectDetector","SelectClarityThreshold","Form","Group","Control","step","onChange","e","parseFloat","target","SelectDisplayType","AppFrame","menuExpanded","setMenuExpanded","running","setRunning","Navbar","bg","Brand","size","ListGroup","color","role","About","href","rel","App","mainDisplay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40402fd8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { PitchDisplay } from 'pitch-display';\n\nimport { BACKGROUND } from '../../constants/colors';\n\nexport interface PitchProps {\n  freq: number | null;\n  clarity: number | null;\n}\n\nclass PitchComponent extends Component<PitchProps> {\n  displayElement = React.createRef<HTMLDivElement>();\n  pitchDisplay?: PitchDisplay;\n  lastRender: number = 0;\n  continuousUpdate: boolean = true;\n\n  componentDidMount() {\n    this.pitchDisplay = new PitchDisplay(\n      this.displayElement.current!,\n      6000,\n      5000\n    );\n    this.pitchDisplay.setBackgroundColor(BACKGROUND);\n\n    // We want to ensure `pitchDisplay` updates at regular\n    // time intervals even if the note has not changed (so\n    // that the display continues scrolling)\n    const startRender = () => {\n      this.updatePitch();\n      if (this.continuousUpdate) {\n        requestAnimationFrame(startRender);\n      }\n    };\n    startRender();\n    window.addEventListener('resize', this.onResize);\n  }\n\n  componentWillUnmount() {\n    this.continuousUpdate = false;\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  onResize = () => {\n    if (this.pitchDisplay) {\n      this.pitchDisplay.resize();\n    }\n  };\n\n  updatePitch() {\n    const time = new Date().getTime();\n    if (time - this.lastRender < 17) {\n      // We don't want to render faster than 60fps\n      return;\n    }\n    if (!this.pitchDisplay) {\n      return;\n    }\n    const { freq, clarity } = this.props;\n    if (freq && freq > 0) {\n      this.pitchDisplay.pushFrequency({\n        frequency: freq,\n        clarity: clarity || 0,\n        time,\n      });\n    }\n    this.lastRender = time;\n    this.pitchDisplay.render(false);\n  }\n\n  render() {\n    this.updatePitch();\n    return (\n      <React.Fragment>\n        <div\n          className=\"full\"\n          style={{ position: 'relative' }}\n          ref={this.displayElement}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PitchComponent;\n","export const BACKGROUND = '#F5F5F5';\n\nexport const PRIMARY = '#3f51b5';\nexport const PRIMARY_LIGHT = '#757de8';\nexport const PRIMARY_DARK = '#002984';\nexport const PRIMARY_TEXT = '#ffffff';\n\nexport const SECONDARY = '#9c27b0';\nexport const SECONDARY_LIGHT = '#d05ce3';\nexport const SECONDARY_DARK = '#6a0080';\nexport const SECONDARY_TEXT = '#ffffff';\n","import { Connection } from 'post-me';\nimport React from 'react';\nimport { WorkerMethods } from '../../../worker/types';\n\ninterface PitchSetup {\n  analyser?: AnalyserNode;\n  audioContext?: AudioContext;\n  buffer?: Float32Array;\n}\ninterface PitchProps {\n  stream: MediaStream;\n  workerConnection: Connection<{}, WorkerMethods, {}>;\n  detectorName: 'autocorrelation' | 'mcleod';\n  windowSize: number;\n  powerThreshold: number;\n  clarityThreshold: number;\n  enabled: boolean;\n  pitchRenderer: React.ComponentType<{\n    freq: number | null;\n    clarity: number | null;\n  }>;\n}\n\n/**\n * While `enabled` is truthy, get the pitch from the input source,\n * and pass its frequency and clarity to `pitchRenderer`.\n *\n * `pitchRenderer` should be a react component that accepts `freq` and `clarity`\n * props.\n *\n * @export\n * @param {PitchProps} {\n *   stream,\n *   detectorName,\n *   workerConnection,\n *   windowSize,\n *   powerThreshold,\n *   clarityThreshold,\n *   enabled,\n *   pitchRenderer,\n * }\n * @returns\n */\nexport function PitchMonitor({\n  stream,\n  detectorName,\n  workerConnection,\n  windowSize,\n  powerThreshold,\n  clarityThreshold,\n  enabled,\n  pitchRenderer,\n}: PitchProps) {\n  const [freq, setFreq] = React.useState<number | null>(null);\n  const [clarity, setClarity] = React.useState<number | null>(null);\n  const pendingRef = React.useRef(false);\n  const pitchSetupRef = React.useRef<PitchSetup>({});\n\n  // Gets called first-thing whenever this component's props change.\n  const setupConnection = React.useCallback(async () => {\n    await workerConnection\n      .remoteHandle()\n      .call('createDetector', detectorName, windowSize, windowSize / 2);\n    const pitchSetup = pitchSetupRef.current;\n    pitchSetup.buffer = new Float32Array(windowSize);\n    pitchSetup.audioContext = new AudioContext();\n    // Create an AudioNode from the stream.\n    const mediaStreamSource = pitchSetup.audioContext.createMediaStreamSource(\n      stream\n    );\n    // Connect it to the destination.\n    pitchSetup.analyser = pitchSetup.audioContext.createAnalyser();\n    pitchSetup.analyser.fftSize = windowSize;\n    mediaStreamSource.connect(pitchSetup.analyser);\n  }, [pitchSetupRef, windowSize, detectorName, stream, workerConnection]);\n\n  // Find the current pitch/clarity and save it in `freq`/`clarity`.\n  const updatePitch = React.useCallback(async () => {\n    if (!pendingRef.current) {\n      pendingRef.current = true;\n\n      const pitchSetup = pitchSetupRef.current;\n      const { analyser, buffer, audioContext } = pitchSetup;\n      if (!analyser || !buffer || !audioContext) {\n        console.warn(\n          'Trying to update the pitch, but missing an analyser/buffer/audioContext'\n        );\n        return;\n      }\n      analyser.getFloatTimeDomainData(buffer);\n      const result = await workerConnection\n        .remoteHandle()\n        .call(\n          'getPitch',\n          buffer,\n          audioContext.sampleRate,\n          powerThreshold,\n          clarityThreshold\n        );\n      const frequency = result[0];\n      const clarity = result[1];\n      if (frequency > 0) {\n        setFreq(frequency);\n        setClarity(clarity);\n      } else {\n        setFreq(null);\n        setClarity(null);\n      }\n\n      pendingRef.current = false;\n    }\n  }, [\n    pendingRef,\n    pitchSetupRef,\n    setFreq,\n    setClarity,\n    powerThreshold,\n    clarityThreshold,\n    workerConnection,\n  ]);\n\n  // This function only gets called when the dependencies update, and it automatically\n  // cleans up when it is called subsequent times. It starts an endless loop\n  // of computing the current pitch.\n  React.useEffect(() => {\n    if (!enabled) {\n      // This function runs whenever the state of `enabled` changes.\n      // When this function is re-run, it automatically cancels the\n      // the audio monitoring, so all we need to do is return here.\n      return;\n    }\n    console.log('Starting audio monitoring.');\n    const escape = { cancelRender: false };\n    function renderFrame() {\n      if (escape.cancelRender) {\n        return;\n      }\n      requestAnimationFrame(renderFrame);\n      updatePitch();\n    }\n    (async () => {\n      await setupConnection();\n      renderFrame();\n    })();\n\n    return () => {\n      console.log('Stopping audio monitoring.');\n      escape.cancelRender = true;\n    };\n  }, [setupConnection, updatePitch, enabled]);\n\n  const PitchRenderer = pitchRenderer;\n  return <PitchRenderer freq={freq} clarity={clarity} />;\n}\n","import { Note, NOTE_SYMBOLS_SHARP } from './circle-chat';\n\nexport function freqToNote(freq: number): { note: Note; octave: number } {\n  const notes = Object.keys(NOTE_SYMBOLS_SHARP) as Note[];\n  const logNote = Math.log2(freq) - LOG_A;\n  // LOG_A is the log of A_4\n  const octave = Math.floor(logNote) + 4;\n  const rot = (((logNote - 0.25) % 1) + 1) % 1;\n  for (let i = 0; i < 12; i++) {\n    const low = i / 12 - 1 / 24;\n    const hi = i / 12 + 1 / 24;\n    if (rot > low && rot <= hi) {\n      return { note: notes[i], octave };\n    }\n  }\n  return { note: 'C', octave };\n}\n\n// The log of A_4\nconst LOG_A = Math.log2(440);\n\n/**\n * Convert a frequency to an angle in radians. The frequency\n * of a \"C\" is at the top of the circle.\n *\n * @export\n * @param {number} freq\n * @returns {number}\n */\nexport function freqToAngle(freq: number): number {\n  // We subtract 0.5, because A is halfway around the circle chart from 0 deg.\n  return ((((Math.log2(freq) - LOG_A - 0.5) % 1) + 1) % 1) * Math.PI * 2;\n}\n\n/**\n * Computes the inner and outer radius for the circle chart\n * based on the available size.\n *\n * @param {number} w\n * @param {number} h\n * @returns\n */\nexport function computeInnerAndOuterRadius(w: number, h: number) {\n  const outerR = Math.min(w, h) / 3;\n  const innerR = outerR * 0.6;\n  return { innerR, outerR };\n}\n\n/**\n * Compute the offset from the center of a circle of radius `r` that a box\n * of width/height `w`/`h` needs to have to be tangent to the circle.\n *\n * @param {number} angle - angle in which to compute the displacement\n * @param {number} r - radius of the circle\n * @param {number} w - width of the box\n * @param {number} h - height of the box\n * @returns {[number, number]} - displacement of the lower-left corner of the box to be tangent\n */\nexport function radialBoxLayoutOffsets(\n  angle: number,\n  r: number,\n  w: number,\n  h: number\n): [number, number] {\n  angle = ((angle % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI);\n\n  // This code was ported from Python. It's just easier to\n  // rename the math functions.\n  const pi = Math.PI;\n  const tan = Math.tan;\n  const arctan = Math.atan;\n  const sqrt = Math.sqrt;\n  const sin = Math.sin;\n  const cos = Math.cos;\n\n  let [outx, outy] = [0, 0];\n\n  if (r === 0) {\n    return [outx, outy];\n  }\n\n  const criticalrange1 = arctan(w / 2.0 / (r + h / 2.0));\n  const criticalrange2 = arctan(w / 2.0 / (r + h / 2.0));\n\n  // Edge is touching\n  if (angle < 0 + criticalrange1 || angle > 2 * pi - criticalrange1) {\n    outx = r;\n    outy = -(r + w / 2) * tan(angle) - h / 2.0;\n  } else if (angle > pi - criticalrange1 && angle < pi + criticalrange1) {\n    outx = -r - w;\n    outy = -(r + w / 2) * tan(pi - angle) - h / 2.0;\n  } else if (\n    angle > pi / 2 - criticalrange2 &&\n    angle < pi / 2 + criticalrange2\n  ) {\n    outx =\n      sqrt((w * w) / 4.0 + (r + h / 2.0) * (r + h / 2.0)) *\n        sin(pi / 2.0 - angle) -\n      w / 2.0;\n    outy = -(r + h);\n  } else if (\n    angle > (pi * 3) / 2 - criticalrange2 &&\n    angle < (pi * 3) / 2 + criticalrange2\n  ) {\n    outx =\n      sqrt((w * w) / 4.0 + (r + h / 2.0) * (r + h / 2.0)) *\n        sin(pi / 2 - angle) -\n      w / 2;\n    outy = r;\n  }\n  // Corner is touching\n  else if (angle >= 0 + criticalrange1 && angle <= pi / 2 - criticalrange2) {\n    const a = sqrt((w * w) / 4.0 + (h * h) / 4.0);\n    const b = r;\n    const B = angle - arctan(h / w);\n    const c = sqrt(b * b + (cos(B) * cos(B) - 1) * a * a) + cos(B) * a;\n    outx = c * cos(angle) - w / 2.0;\n    outy = -(c * sin(angle) + h / 2.0);\n  } else if (angle >= pi / 2 + criticalrange2 && angle <= pi - criticalrange1) {\n    //adjust angle so we can pretend we're in the first quadrant\n    angle = pi - angle;\n    const a = sqrt((w * w) / 4.0 + (h * h) / 4.0);\n    const b = r;\n    const B = angle - arctan(h / w);\n    const c = sqrt(b * b + (cos(B) * cos(B) - 1) * a * a) + cos(B) * a;\n    outx = -(c * cos(angle) - w / 2) - w;\n    outy = -(c * sin(angle) + h / 2);\n  } else if (\n    angle >= pi + criticalrange1 &&\n    angle <= (pi * 3) / 2 - criticalrange2\n  ) {\n    // adjust angle so we can pretend we're in the first quadrant\n    angle -= pi;\n    const a = sqrt((w * w) / 4 + (h * h) / 4);\n    const b = r;\n    const B = angle - arctan(h / w);\n    const c = sqrt(b * b + (cos(B) * cos(B) - 1) * a * a) + cos(B) * a;\n    outx = -c * cos(angle) - w / 2;\n    outy = c * sin(angle) - h / 2;\n  } else if (\n    angle >= (pi * 3) / 2 + criticalrange2 &&\n    angle <= 2 * pi - criticalrange1\n  ) {\n    // adjust angle so we can pretend we're in the first quadrant\n    angle = 2 * pi - angle;\n    const a = sqrt((w * w) / 4 + (h * h) / 4);\n    const b = r;\n    const B = angle - arctan(h / w);\n    const c = sqrt(b * b + (cos(B) * cos(B) - 1) * a * a) + cos(B) * a;\n    outx = c * cos(angle) - w / 2;\n    outy = c * sin(angle) - h / 2;\n  }\n\n  return [outx, outy];\n}\n","import React from 'react';\nimport {\n  computeInnerAndOuterRadius,\n  freqToAngle,\n  freqToNote,\n  radialBoxLayoutOffsets,\n} from './utils';\n\nexport type Note =\n  | 'C'\n  | 'Db'\n  | 'D'\n  | 'Eb'\n  | 'E'\n  | 'F'\n  | 'Gb'\n  | 'G'\n  | 'Ab'\n  | 'A'\n  | 'Bb'\n  | 'B';\n\nexport const NOTE_SYMBOLS_SHARP: { [key in Note]: string } = {\n  C: 'C',\n  Db: 'C♯',\n  D: 'D',\n  Eb: 'D♯',\n  E: 'E',\n  F: 'F',\n  Gb: 'F♯',\n  G: 'G',\n  Ab: 'G♯',\n  A: 'A',\n  Bb: 'A♯',\n  B: 'B',\n};\nexport const NOTE_SYMBOLS_FLAT: { [key in Note]: string } = {\n  C: 'C',\n  Db: 'D♭',\n  D: 'D',\n  Eb: 'E♭',\n  E: 'E',\n  F: 'F',\n  Gb: 'G♭',\n  G: 'G',\n  Ab: 'A♭',\n  A: 'A',\n  Bb: 'B♭',\n  B: 'B',\n};\n\nexport function drawCircleChartBackground(\n  ctx: CanvasRenderingContext2D,\n  [w, h]: [number, number],\n  options: {\n    innerR?: number;\n    outerR?: number;\n  } = {}\n) {\n  const offsetAngle = 0;\n  const [cX, cY] = [w / 2, h / 2];\n  const outerR = options.outerR ?? Math.min(w, h) / 3;\n  const innerR = options.innerR ?? outerR * 0.6;\n\n  const ring = new Path2D();\n  ring.arc(cX, cY, outerR, 0, 2 * Math.PI);\n  // If we don't move to the start of the next arc, there\n  // will be a line connecting them.\n  ring.moveTo(cX + innerR, cY);\n  ring.arc(cX, cY, innerR, 0, 2 * Math.PI);\n  ctx.fillStyle = 'rgb(204,204,240)';\n  ctx.fill(ring, 'evenodd');\n\n  ctx.strokeStyle = 'rgb(110,102,102)';\n\n  // draw some ticks\n  const ticks = new Path2D();\n  for (let i = 0; i < 5 * 12; i++) {\n    const angle = (i / (5 * 12)) * 2 * Math.PI - offsetAngle;\n    let tickLen = 0.5;\n    if (i % 5 === 0) {\n      // Every fifth tick is long\n      tickLen = 1.0;\n    }\n    const vecX = Math.cos(angle);\n    const vecY = Math.sin(angle);\n    ticks.moveTo(vecX * outerR + cX, vecY * outerR + cY);\n    ticks.lineTo(\n      vecX * (1 - 0.08 * tickLen) * outerR + cX,\n      vecY * (1 - 0.08 * tickLen) * outerR + cY\n    );\n  }\n  ctx.lineWidth = 2;\n  ctx.stroke(ticks);\n\n  ctx.lineWidth = 1;\n  ctx.stroke(ring);\n\n  return { innerR, outerR };\n}\n\nfunction drawCircleChartArrow(\n  ctx: CanvasRenderingContext2D,\n  [w, h]: [number, number],\n  options: {\n    angle: number;\n    opacity: number;\n    innerR: number;\n    outerR: number;\n  }\n) {\n  const { angle, opacity, innerR, outerR } = options;\n  const [vec_x, vec_y] = [Math.cos(angle), Math.sin(angle)];\n  // Compute the normal vector\n  const [nvec_x, nvec_y] = [-vec_y, vec_x];\n\n  ctx.moveTo(\n    vec_x * innerR + 3 * nvec_x + w / 2,\n    -(vec_y * innerR + 3 * nvec_y) + h / 2\n  );\n  ctx.lineTo(\n    vec_x * innerR - 3 * nvec_x + w / 2,\n    -(vec_y * innerR - 3 * nvec_y) + h / 2\n  );\n  ctx.lineTo(vec_x * outerR + w / 2, -(vec_y * outerR) + h / 2);\n\n  ctx.fillStyle = `rgba(0,128,204,${opacity})`;\n  ctx.fill();\n  ctx.strokeStyle = `rgba(0,77,204,${opacity})`;\n  ctx.lineJoin = 'bevel';\n  ctx.stroke();\n}\n\nfunction UpdateTargetNote() {\n  const targetNotes: Note[] = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n  const randomIndex = Math.floor(Math.random() * targetNotes.length);\n  g_targetNote = targetNotes[randomIndex];\n\n  // When displaying the target note, randomly switch off between\n  // displaying notes with sharps or displaying them with flats\n  if ( Math.floor(Math.random() * 2) ) // expression will be 0 or 1\n    g_targetNoteDisplayVal = NOTE_SYMBOLS_SHARP[g_targetNote];\n  else\n    g_targetNoteDisplayVal = NOTE_SYMBOLS_FLAT[g_targetNote];\n}\n\nlet g_targetNote = 'C';\nlet g_targetNoteDisplayVal = 'C';\nUpdateTargetNote();\n\nfunction Frequency({\n  hz,\n  noteFormat,\n}: {\n  hz: number;\n  noteFormat: 'sharp' | 'flat';\n}) {\n  const noteSymbols =\n    noteFormat === 'sharp' ? NOTE_SYMBOLS_SHARP : NOTE_SYMBOLS_FLAT;\n  const { note, octave } = freqToNote(hz);\n\n  // If the current note matches the target note then get the next target note\n  if (note === g_targetNote)\n    UpdateTargetNote();\n\n  return (\n    <div>\n      <span className=\"freq-note\">\n        {(noteSymbols[note].length === 2) ? \n          NOTE_SYMBOLS_SHARP[note] + \" / \" + NOTE_SYMBOLS_FLAT[note] :\n          NOTE_SYMBOLS_SHARP[note]}\n        {/* <span className=\"freq-octave\">{octave}</span> */}\n      </span>\n      <span className=\"freq-hz\">{Math.round(hz)} Hz</span>\n      <span className=\"freq-hz\">Octave: {octave}</span>\n    </div>\n  );\n}\n\nconst CircleChartBackground = React.memo(function CircleChartBackground({\n  w,\n  h,\n  noteFormat = 'sharp',\n}: {\n  w: number;\n  h: number;\n  noteFormat?: 'sharp' | 'flat';\n}) {\n  const canvas = React.useRef<HTMLCanvasElement>(null);\n  // The note labels are rendered in divs so we can use CSS to style them.\n  // We need to store refs to all these divs so we can dynamically compute their\n  // sizes.\n  const noteRefs = React.useRef<React.RefObject<HTMLDivElement>[]>([\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n  ]);\n  const offsetAngle = 0;\n  const [cX, cY] = [w / 2, h / 2];\n  const outerR = Math.min(w, h) / 3;\n  const innerR = outerR * 0.6;\n\n  const noteSymbols =\n    noteFormat === 'sharp' ? NOTE_SYMBOLS_SHARP : NOTE_SYMBOLS_FLAT;\n  const notes = Object.keys(noteSymbols) as Note[];\n\n  React.useEffect(() => {\n    const ctx = canvas.current?.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n\n    drawCircleChartBackground(ctx, [w, h], { innerR, outerR });\n    // Position all the labels\n    for (let i = 0; i < 12; i++) {\n      const angle = (-i / 12.0) * 2 * Math.PI + Math.PI / 2 + offsetAngle;\n      const ref = noteRefs.current[i];\n      if (!ref.current) {\n        continue;\n      }\n      const div = ref.current;\n      const { width: divW, height: divH } = div.getBoundingClientRect();\n      const [ox, oy] = radialBoxLayoutOffsets(angle, outerR + 4, divW, divH);\n      div.style.left = `${ox + cX}px`;\n      div.style.top = `${oy + cY}px`;\n    }\n  }, [w, h, noteFormat, cX, cY, innerR, outerR, offsetAngle]);\n\n  return (\n    <React.Fragment>\n      <canvas width={w} height={h} ref={canvas} className=\"freq-background\" />\n      {noteRefs.current.map((ref, i) => (\n        <div key={i} ref={ref} className=\"freq-note-label\">\n          {noteSymbols[notes[i]]}\n        </div>\n      ))}\n    </React.Fragment>\n  );\n});\n\nexport function CircleChart({\n  freq = 440,\n  clarity = 0,\n}: {\n  freq: number | null;\n  clarity: number | null;\n}) {\n  const [w, setW] = React.useState(400);\n  const [h, setH] = React.useState(400);\n  const surroundingDivRef = React.useRef<HTMLDivElement>(null);\n  const canvasPointerRef = React.useRef<HTMLCanvasElement>(null);\n  const { innerR, outerR } = computeInnerAndOuterRadius(w, h);\n  const angle = freqToAngle(freq || 440);\n\n  // Track resize changes and make sure to resize the circle chart accordingly\n  React.useLayoutEffect(() => {\n    function handleResize() {\n      const div = surroundingDivRef.current;\n      if (!div) {\n        return;\n      }\n      const { width, height } = div.getBoundingClientRect();\n      setW(width);\n      setH(height);\n    }\n    // Run the resizer once when the component mounts.\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [setW, setH, surroundingDivRef]);\n\n  React.useEffect(() => {\n    if (!canvasPointerRef.current) {\n      return;\n    }\n    const pointerContext = canvasPointerRef.current.getContext('2d');\n    if (!pointerContext) {\n      return;\n    }\n\n    //Our draw come here\n    drawCircleChartArrow(pointerContext, [w, h], {\n      angle: 0,\n      opacity: 0.8,\n      innerR,\n      outerR,\n    });\n  }, [w, h, innerR, outerR]);\n\n  return (\n    <div ref={surroundingDivRef} className=\"freq-surround\">\n      <CircleChartBackground w={w} h={h} noteFormat=\"sharp\" />\n      <div className=\"freq-container\">\n        <span className=\"freq-target\">Play {g_targetNoteDisplayVal}</span>\n        {freq && <Frequency hz={freq || 440} noteFormat=\"sharp\" />}\n      </div>\n      <canvas\n        className=\"freq-pointer\"\n        width={w}\n        height={h}\n        ref={canvasPointerRef}\n        style={{\n          transformOrigin: 'center',\n          transform: `rotate(${angle}rad)`,\n          visibility: freq ? 'visible' : 'hidden',\n        }}\n      />\n    </div>\n  );\n}\n","import {\n  action,\n  Action,\n  createStore,\n  createTypedHooks,\n  thunk,\n  Thunk,\n} from 'easy-peasy';\nimport { Connection, ParentHandshake, WorkerMessenger } from 'post-me';\n\ntype Detector = 'mcleod' | 'autocorrelation';\ntype DisplayType = 'chart' | 'circle';\n\ninterface StoreModel {\n  windowSize: number;\n  setWindowSize: Action<StoreModel, number>;\n\n  detectorName: Detector;\n  setDetectorName: Action<StoreModel, Detector>;\n\n  displayType: DisplayType;\n  setDisplayType: Action<StoreModel, DisplayType>;\n\n  clarityThreshold: number;\n  setClarityThreshold: Action<StoreModel, number>;\n\n  enabled: boolean;\n  setEnabled: Action<StoreModel, boolean>;\n\n  stream: MediaStream | null | undefined;\n  audioOptions: MediaStreamConstraints;\n  setStream: Action<StoreModel, MediaStream | null>;\n  loading: boolean;\n  setLoading: Action<StoreModel, boolean>;\n  loaded: boolean;\n  setLoaded: Action<StoreModel, boolean>;\n  initializeStream: Thunk<StoreModel, void>;\n  stopStream: Thunk<StoreModel, void>;\n\n  workerConnection: Connection | null | undefined;\n  setWorkerConnection: Action<StoreModel, Connection | null>;\n  initializeWorker: Thunk<StoreModel, void>;\n}\n\nexport const store = createStore<StoreModel>({\n  // Default values\n  windowSize: 1024,\n  detectorName: 'mcleod',\n  displayType: 'circle',\n  clarityThreshold: 0.5,\n  enabled: false,\n  loading: false,\n  loaded: false,\n  stream: null,\n  audioOptions: { audio: { echoCancellation: true, autoGainControl: true } },\n  workerConnection: null,\n\n  setWindowSize: action((state, payload) => {\n    state.windowSize = payload;\n  }),\n  setDetectorName: action((state, payload) => {\n    state.detectorName = payload;\n  }),\n  setDisplayType: action((state, payload) => {\n    state.displayType = payload;\n  }),\n  setClarityThreshold: action((state, payload) => {\n    state.clarityThreshold = payload;\n  }),\n  setEnabled: action((state, payload) => {\n    state.enabled = payload;\n  }),\n  setStream: action((state, payload) => {\n    state.stream = payload;\n  }),\n  setLoading: action((state, payload) => {\n    state.loading = payload;\n  }),\n  setLoaded: action((state, payload) => {\n    state.loaded = payload;\n  }),\n  setWorkerConnection: action((state, payload) => {\n    state.workerConnection = payload;\n  }),\n  initializeStream: thunk(async (actions, payload, { getState }) => {\n    const state = getState();\n    const options = state.audioOptions;\n\n    actions.setLoading(true);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia(options);\n      actions.setStream(stream);\n      actions.setLoading(false);\n      actions.setLoaded(true);\n    } catch (e) {\n      console.error(e);\n      actions.setStream(null);\n      actions.setLoading(false);\n      actions.setLoaded(false);\n    }\n  }),\n  stopStream: thunk(async (actions, payload, { getState }) => {\n    const stream = getState().stream;\n\n    if (stream) {\n      for (const track of stream.getTracks()) {\n        track.stop();\n      }\n    }\n\n    actions.setStream(null);\n    actions.setLoading(false);\n    actions.setLoaded(false);\n  }),\n  initializeWorker: thunk(async (actions) => {\n    const worker = new Worker(\n      `${process.env.PUBLIC_URL}/pitch-detection/worker.js`\n    );\n\n    const messenger = new WorkerMessenger({ worker });\n\n    try {\n      const connection = await ParentHandshake(messenger, {}, 5, 1000);\n      actions.setWorkerConnection(connection);\n    } catch (e) {\n      console.error('Failed to connect to worker', e);\n      actions.setWorkerConnection(null);\n    }\n  }),\n});\n\n// Create a version of the standard hooks that always references our `StoreModel` type\nconst typedHooks = createTypedHooks<StoreModel>();\n\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;\n","import React from 'react';\n\nimport './side-nav.css';\nimport 'hamburgers/dist/hamburgers.min.css';\n\nconst SideNavContext = React.createContext({\n  expanded: false,\n  toggleExpanded: () => {},\n});\n\nfunction _SideNav({\n  expanded: _expanded,\n  onToggle,\n  children,\n}: {\n  expanded?: boolean;\n  onToggle?: Function;\n  children?: React.ReactNode;\n}) {\n  // We use built-in state unless a managed state is passed in.\n  let [expanded, setExpanded] = React.useState(_expanded || false);\n  if (_expanded != null) {\n    expanded = _expanded;\n  }\n  function toggleExpanded() {\n    setExpanded(!expanded);\n    if (onToggle) {\n      onToggle(!expanded);\n    }\n  }\n\n  return (\n    <SideNavContext.Provider value={{ expanded, toggleExpanded }}>\n      <nav className={`sidenav ${expanded ? 'expanded' : ''}`}>{children}</nav>\n    </SideNavContext.Provider>\n  );\n}\n\nexport function Toggle() {\n  const { expanded, toggleExpanded } = React.useContext(SideNavContext);\n  return (\n    <div className=\"sidenav-toggle\">\n      <button\n        className={`hamburger hamburger--squeeze ${\n          expanded ? 'is-active' : ''\n        }`}\n        type=\"button\"\n        aria-label=\"Menu\"\n        aria-controls=\"navigation\"\n        onClick={toggleExpanded}\n      >\n        <span className=\"hamburger-box\">\n          <span className=\"hamburger-inner\"></span>\n        </span>\n      </button>\n    </div>\n  );\n}\n\nexport function Nav({ children }: { children: React.ReactNode }) {\n  return <div className=\"sidenav-nav\">{children}</div>;\n}\n\nexport function NavItem({\n  children,\n  ...rest\n}: { children: React.ReactNode } & React.HTMLAttributes<HTMLDivElement>) {\n  let { className, ..._rest } = rest;\n  className = 'sidenav-item ' + (className ? className : '');\n  return (\n    <div className={className} {..._rest}>\n      {children}\n    </div>\n  );\n}\n\nexport function NavIcon({ children }: { children: React.ReactNode }) {\n  return <button className=\"sidenav-icon\">{children}</button>;\n}\nexport function NavText({ children }: { children: React.ReactNode }) {\n  return <div className=\"sidenav-text\">{children}</div>;\n}\nexport function NavExtra({ children }: { children: React.ReactNode }) {\n  return <div className=\"sidenav-extra\">{children}</div>;\n}\n\nexport const SideNav = Object.assign(_SideNav, {\n  Nav,\n  NavItem,\n  NavIcon,\n  NavText,\n  NavExtra,\n});\n","import React from 'react';\nimport { Dropdown, DropdownButton, Form } from 'react-bootstrap';\nimport { useStoreActions, useStoreState } from '../../model';\n\nexport function Select({\n  selected: _selected,\n  onSelect: _onSelect,\n  choices,\n}: {\n  selected?: any;\n  onSelect?: Function;\n  choices: { value: any; desc: React.ReactNode }[];\n}) {\n  let [selected, setSelected] = React.useState(_selected);\n  if (_selected != null) {\n    selected = _selected;\n  }\n  const selectedIndex = Math.max(\n    choices.findIndex((item) => item.value === selected),\n    0\n  );\n\n  function onSelect(index: any) {\n    setSelected(choices[index].value);\n    if (_onSelect) {\n      _onSelect(choices[index].value);\n    }\n  }\n\n  return (\n    <DropdownButton\n      onSelect={onSelect}\n      title={choices[selectedIndex].desc}\n      variant=\"outline-light\"\n      as=\"span\"\n    >\n      {choices?.map(({ desc }, i) => (\n        <Dropdown.Item key={i} eventKey={'' + i}>\n          {desc}\n        </Dropdown.Item>\n      ))}\n    </DropdownButton>\n  );\n}\n\nexport function SelectWindowSize() {\n  const windowSize = useStoreState((state) => state.windowSize);\n  const setWindowSize = useStoreActions((actions) => actions.setWindowSize);\n  return (\n    <Select\n      selected={windowSize}\n      onSelect={setWindowSize}\n      choices={[\n        { value: 512, desc: '512 Samples' },\n        { value: 1024, desc: '1024 Samples' },\n        { value: 2048, desc: '2048 Samples' },\n        { value: 4096, desc: '4096 Samples' },\n      ]}\n    />\n  );\n}\n\nexport function SelectDetector() {\n  const detectorName = useStoreState((state) => state.detectorName);\n  const setDetectorName = useStoreActions((actions) => actions.setDetectorName);\n  return (\n    <Select\n      selected={detectorName}\n      onSelect={setDetectorName}\n      choices={[\n        { value: 'mcleod', desc: 'McLeod' },\n        { value: 'autocorrelation', desc: 'Autocorrelation' },\n      ]}\n    />\n  );\n}\n\nexport function SelectClarityThreshold() {\n  const clarityThreshold = useStoreState((state) => state.clarityThreshold);\n  const setClarityThreshold = useStoreActions(\n    (actions) => actions.setClarityThreshold\n  );\n\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Control\n          type=\"range\"\n          value={clarityThreshold}\n          min={0.0}\n          max={1.0}\n          step={0.01}\n          onChange={(e) => setClarityThreshold(parseFloat(e.target.value))}\n        />\n      </Form.Group>\n    </Form>\n  );\n}\n\nexport function SelectDisplayType() {\n  const displayType = useStoreState((state) => state.displayType);\n  const setDisplayType = useStoreActions((actions) => actions.setDisplayType);\n\n  return (\n    <Select\n      selected={displayType}\n      onSelect={setDisplayType}\n      choices={[\n        { value: 'chart', desc: 'Linear Chart' },\n        { value: 'circle', desc: 'Circle Chart' },\n      ]}\n    />\n  );\n}\n","import React from 'react';\nimport { ListGroup, Navbar } from 'react-bootstrap';\nimport { Gear, Lightbulb, Play, Stop } from 'react-bootstrap-icons';\nimport { useStoreActions, useStoreState } from '../../model';\nimport {\n  NavIcon,\n  NavItem,\n  NavText,\n  NavExtra,\n  SideNav,\n  Toggle,\n} from '../side-nav/side-nav';\nimport {\n  SelectClarityThreshold,\n  SelectDetector,\n  SelectDisplayType,\n  SelectWindowSize,\n} from './options';\n\nexport function AppFrame({ children }: { children: React.ReactNode }) {\n  const [menuExpanded, setMenuExpanded] = React.useState(false);\n  const [running, setRunning] = React.useState(false);\n  const clarityThreshold = useStoreState((state) => state.clarityThreshold);\n\n  const { initializeStream, stopStream, setEnabled } = useStoreActions(\n    (actions) => actions\n  );\n\n  React.useEffect(() => {\n    if (running) {\n      (async () => {\n        await initializeStream();\n        setEnabled(true);\n        console.log('Stream Initialized');\n      })();\n    } else {\n      (async () => {\n        setEnabled(false);\n        await stopStream();\n        console.log('Stream Stopped');\n      })();\n    }\n\n    return stopStream;\n  }, [initializeStream, running, setEnabled, stopStream]);\n\n  return (\n    <React.Fragment>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand>Pitch Detector and Trainer</Navbar.Brand>\n      </Navbar>\n      <div className=\"main-container\">\n        <SideNav expanded={menuExpanded} onToggle={setMenuExpanded}>\n          <Toggle />\n          <SideNav.Nav>\n            <NavItem\n              className={running ? 'active' : ''}\n              onClick={() => {\n                setRunning(!running);\n              }}\n            >\n              {running ? (\n                <React.Fragment>\n                  <NavIcon>\n                    <Stop size=\"20\" />\n                  </NavIcon>\n                  <NavText>Stop</NavText>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <NavIcon>\n                    <Play size=\"20\" />\n                  </NavIcon>\n                  <NavText>Start</NavText>\n                </React.Fragment>\n              )}\n            </NavItem>\n            <NavItem\n              onClick={() => {\n                setMenuExpanded(!menuExpanded);\n              }}\n            >\n              <NavIcon>\n                <Gear size=\"20\" />\n              </NavIcon>\n              <NavText>Settings</NavText>\n            </NavItem>\n            <NavExtra>\n              <ListGroup variant=\"flush\" color=\"primary\">\n                <ListGroup.Item>\n                  <div className=\"setting\">\n                    <span className=\"setting-desc\">Window Size</span>\n                    <SelectWindowSize />\n                  </div>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <div className=\"setting\">\n                    <span className=\"setting-desc\">Detector</span>\n                    <SelectDetector />\n                  </div>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <div className=\"setting\">\n                    <span className=\"setting-desc\">\n                      Clarity Threshold ({clarityThreshold})\n                    </span>\n                    <SelectClarityThreshold />\n                  </div>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <div className=\"setting\">\n                    <span className=\"setting-desc\">Display Type</span>\n                  </div>\n                  <SelectDisplayType />\n                </ListGroup.Item>\n              </ListGroup>\n            </NavExtra>\n            <NavItem\n              className={'mt-auto' + (running ? '' : ' active')}\n              onClick={() => {\n                // The about screen automatically shows when the app is not running,\n                // so this is a shortcut to show the about screen\n                setRunning(false);\n              }}\n            >\n              <NavIcon>\n                <Lightbulb size=\"20\" />\n              </NavIcon>\n              <NavText>About</NavText>\n            </NavItem>\n          </SideNav.Nav>\n        </SideNav>\n\n        <main role=\"main\">{children}</main>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\nexport function About() {\n  return (\n    <div className=\"container\">\n      <h2>A Rust + WebAssembly Pitch Detector and Pitch Trainer</h2>\n      <h3>Authors</h3>\n      <span>Pitch Detection: Alessandro Genova, Jason Siefken<br/>Pitch Trainer: Nathan Bushman</span>\n      <br />\n      <h3>Core Library</h3>\n      <span>\n        <a\n          href=\"https://github.com/alesgenova/pitch-detection\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Source\n        </a>\n        <br />\n        (rust)\n      </span>\n      <br />\n      <h3>Demo App</h3>\n      <span>\n        <a\n          href=\"https://github.com/OtterFlip/pitch-detection-app\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Source\n        </a>\n        <br />\n        (wasm, react)\n      </span>\n      <br />\n      <h3>Usage</h3>\n      <span>Click on the play button to start training.  You will be repeatedly prompted to play a random note.  Upon detection, you'll be prompted to play a new random note.  For instruments, it's best to memorize in a cumulative manner. For instance with a guitar you could start on one string such as the highest string and memorize all the notes and then add the second string by playing notes from both the first and second strings and so on.  If you learn one string and then switch to learning a different string without continuing to practice the first string then you'll be more likely to confuse your brain and forget the notes on the first string.</span>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport PitchComponent from './components/pitch';\nimport { PitchMonitor } from './components/pitch/pitch-monitor';\nimport { CircleChart } from './components/circle-chart/circle-chat';\nimport { AppFrame } from './components/main/app-frame';\nimport { useStoreActions, useStoreState } from './model';\nimport { About } from './components/main/about';\n\nfunction App() {\n  const POWER_THRESHOLD = 0.15;\n\n  const detectorName = useStoreState((state) => state.detectorName);\n  const windowSize = useStoreState((state) => state.windowSize);\n  const clarityThreshold = useStoreState((state) => state.clarityThreshold);\n  const displayType = useStoreState((state) => state.displayType);\n  const enabled = useStoreState((state) => state.enabled);\n\n  const { loaded, stream, workerConnection } = useStoreState((state) => ({\n    loaded: state.loaded,\n    loading: state.loading,\n    stream: state.stream,\n    workerConnection: state.workerConnection,\n  }));\n\n  const { initializeWorker } = useStoreActions((actions) => actions);\n\n  React.useEffect(() => {\n    (async () => {\n      await initializeWorker();\n      console.log('Worker initialized');\n    })();\n  }, [initializeWorker]);\n\n  let mainDisplay = <About />;\n  if (loaded && stream && workerConnection) {\n    const pitchRenderer =\n      displayType === 'circle' ? CircleChart : PitchComponent;\n    mainDisplay = (\n      <PitchMonitor\n        stream={stream}\n        detectorName={detectorName}\n        workerConnection={workerConnection}\n        windowSize={windowSize}\n        powerThreshold={POWER_THRESHOLD}\n        clarityThreshold={clarityThreshold}\n        enabled={enabled}\n        pitchRenderer={pitchRenderer}\n      />\n    );\n  }\n\n  return <AppFrame>{mainDisplay}</AppFrame>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { StoreProvider } from 'easy-peasy';\nimport { store } from './model';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}